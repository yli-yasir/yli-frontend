{"version":3,"sources":["globalStyle.js","components/Header/index.js","components/Page/index.jsx","pages/About.js","utills.js","components/Card/index.jsx","graphql/operations.js","components/Zoom/index.js","components/LoadingPresenter/loading.gif","components/LoadingPresenter/index.jsx","components/RepoList/index.js","pages/Home.js","pages/ProjectDetails.js","App.js","graphql/index.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","textColor","backgroundColor","themes","light","dark","StyledHeader","styled","div","ActionsContainer","Header","themeContext","useContext","ThemeContext","to","href","icon","faGithubAlt","size","faYoutube","faQuestionCircle","role","themeKey","faMoon","faSun","onClick","nextThemeKey","setThemeKey","StyledPage","Page","children","About","faEnvelope","getREADMELink","repoName","defaultBranch","replaceRelativeLinks","markdown","replace","_","relativeSrc","borders","css","StyledCard","TopicContainer","span","DateContainer","Card","props","kebabCaseTitle","className","link","title","process","replaceAll","firstLetter","toUpperCase","description","topics","map","topic","date","toLocaleString","GET_REPOSITORIES","gql","AnimatedContainer","timeout","Zoom","otherProps","CSSTransition","classNames","unmountOnExit","StatusIndicator","img","LoadingIndicator","src","loadingImg","alt","LoadingPresenter","loading","error","RepoList","useQuery","variables","first","notifyOnNetworkStatusChange","data","fetchMore","useInView","inView","ref","repos","viewer","repositories","edges","edge","node","pageInfo","TransitionGroup","appear","repo","index","repositoryTopics","nodes","name","defaultBranchRef","Date","updatedAt","hasNextPage","after","endCursor","Home","ContentContainer","ProjectDetails","useParams","useAsync","a","fetch","response","text","value","dangerouslySetInnerHTML","__html","marked","App","useState","path","component","cache","InMemoryCache","typePolicies","User","fields","relayStylePagination","githubApolloClient","ApolloClient","uri","ReactDOM","render","ApolloProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.48a82e76.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    color: ${({ theme }) => theme.textColor};\n    background-color: ${({ theme }) => theme.backgroundColor};\n    font-family: \"Quicksand\", sans-serif;\n  }\n  * {\n    box-sizing:border-box;\n  }\n  a {\n    color: inherit;\n  }\n  svg[role=\"button\"] {\n    cursor: pointer;\n  }\n  p {\n    text-align: justify;\n  }\n  h1 > a {\n    text-decoration:none;\n  }\n`;\n\nexport default GlobalStyle;\n\nexport const themes = {\n  light: {\n    textColor: \"black\",\n    backgroundColor: \"white\",\n  },\n  dark: {\n    textColor: \"white\",\n    backgroundColor: \"black\",\n  },\n};\n","import styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSun,\n  faQuestionCircle,\n  faMoon,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faGithubAlt, faYoutube } from \"@fortawesome/free-brands-svg-icons\";\nimport { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ThemeContext } from \"styled-components\";\n\nconst StyledHeader = styled.div`\n  font-family: \"Press Start 2P\", sans-serif;\n  text-align: center;\n`;\n\nconst ActionsContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding: 16px;\n`;\nexport default function Header() {\n  const themeContext = useContext(ThemeContext);\n\n  const toggleTheme = () => {\n    const nextThemeKey = themeContext.themeKey === \"light\" ? \"dark\" : \"light\";\n    themeContext.setThemeKey(nextThemeKey);\n  };\n\n  return (\n    <StyledHeader>\n      <h1>\n        <Link to=\"/\">Y-Li</Link>\n      </h1>\n      <h4>Yasir Al-Baldawi</h4>\n      <ActionsContainer>\n  \n\n        <a href=\"https://github.com/yli-yasir\">\n          <FontAwesomeIcon icon={faGithubAlt} size=\"2x\" />\n        </a>\n\n        <a href=\"https://www.youtube.com/channel/UCx_slW-WOgcElccYYJnLt1Q\">\n          <FontAwesomeIcon icon={faYoutube} size=\"2x\" />\n        </a>\n\n        <Link to=\"/about\">\n          <FontAwesomeIcon icon={faQuestionCircle} size=\"2x\" />\n        </Link>\n\n        <FontAwesomeIcon\n          role=\"button\"\n          icon={themeContext.themeKey === \"light\" ? faMoon : faSun}\n          size=\"2x\"\n          onClick={toggleTheme}\n        />\n      </ActionsContainer>\n    </StyledHeader>\n  );\n}\n","import Header from \"../Header\";\nimport styled from \"styled-components\";\n\nconst StyledPage = styled.div`\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding:8px;\n  width: 100%;\n  @media (min-width: 600px) {\n    width: 80%;\n  }\n  @media (min-width: 960px) {\n    width: 60%;\n  }\n  @media (min-width: 1280px) {\n    width: 40%;\n  }\n`;\n\nexport default function Page({children}){\n  return <StyledPage>\n    <Header/>\n    {children}\n  </StyledPage>\n\n}","import Page from \"../components/Page\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nexport default function About() {\n  return (\n    <Page>\n      <p>\n        I develop software applications using modern technologies. My journey\n        started out with Java and Android development then slowly transitioned\n        into web development. Although I mainly use and love certain\n        technologies, I am still a firm believer in \"using the right tool for\n        the right job\", so I always expand my toolset when needed.\n      </p>\n\n      <h3>Contact me</h3>\n      <p>\n        <FontAwesomeIcon icon={faEnvelope} />\n        &nbsp;\n        <a href=\"mailto:yli.devs@gmail.com\">yli.devs@gmail.com</a>\n      </p>\n    </Page>\n  );\n}\n","export const getRepoTitle = (kebabCaseTitle) => {\n  if (kebabCaseTitle === process.env.REACT_APP_HOME_ADDRESS) {\n    return kebabCaseTitle;\n  }\n\n  return kebabCaseTitle\n    .replaceAll(\"-\", \" \")\n    .replaceAll(/\\b(\\w)/g, (_, firstLetter) => firstLetter.toUpperCase());\n};\n\nexport const makeProjectLink = (repoName, defaultBranch) =>\n  `/projects/${repoName}/${defaultBranch}`;\n\nexport const getREADMELink = (repoName, defaultBranch) =>\n  `https://raw.githubusercontent.com/yli-yasir/${repoName}/${defaultBranch}/README.md`;\n\nexport const replaceRelativeLinks = (repoName, defaultBranch, markdown) => {\n  const replaced = markdown.replace(/src=\"(\\/.+?)\"/g, (_, relativeSrc) => {\n    return `src=\"https://raw.githubusercontent.com/yli-yasir/${repoName}/${defaultBranch}${relativeSrc}\"`;\n  });\n  return replaced;\n};\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { css } from \"styled-components\";\nimport { getRepoTitle } from \"../../utills\";\nimport { Link } from \"react-router-dom\";\n\nconst borders = css`\n  border: 2px solid ${({ theme }) => theme.textColor};\n  border-radius: 8px;\n`;\n\nconst StyledCard = styled.div`\n  ${borders}\n  padding: 8px;\n  margin: 8px;\n`;\n\nconst TopicContainer = styled.span`\n  ${borders}\n  padding:4px;\n  margin: 4px;\n  display: inline-block;\n`;\n\nconst DateContainer = styled.span`\n  display: block;\n  width: 200px;\n  text-align: right;\n  margin-left: auto;\n`;\n\nfunction Card(props) {\n  return (\n    <StyledCard className={props.className}>\n      <Link to={props.link}>\n        <h3>{getRepoTitle(props.title)}</h3>\n      </Link>\n      <p>{props.description}</p>\n      {props.topics?.map((topic) => (\n        <TopicContainer key={topic}>{topic}</TopicContainer>\n      ))}\n      <DateContainer>{props.date?.toLocaleString()}</DateContainer>\n    </StyledCard>\n  );\n}\n\nCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  topics: PropTypes.arrayOf(PropTypes.string),\n  date: PropTypes.instanceOf(Date),\n};\n\nexport default Card;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_REPOSITORIES = gql`\n  query GetRepositories($first: Int!, $after: String) {\n    viewer {\n      repositories(\n        first: $first\n        orderBy: { field: UPDATED_AT, direction: DESC }\n        after: $after\n      ) {\n        edges {\n          node {\n            name\n            description\n            updatedAt\n            defaultBranchRef {\n              name\n            }\n            repositoryTopics(first: 10) {\n              nodes {\n                topic {\n                  name\n                }\n              }\n            }\n          }\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n    }\n  }\n`;\n","import { CSSTransition } from \"react-transition-group\";\nimport styled from \"styled-components\";\n\nconst AnimatedContainer = styled.div`\n  ${(props) => `\n &.zoom-appear {\n    transform: scale(0);\n\n  }\n  &.zoom-appear-active {\n    transform: scale(1);\n    transition: transform ${props.timeout}ms ease;\n\n  }\n  &.zoom-enter {\n    transform: scale(0);\n\n  }\n  &.zoom-enter-active {\n    transform: scale(1);\n    transition: transform ${props.timeout}ms ease;\n\n  }\n  &.zoom-exit {\n    transform: scale(1);\n\n  }\n  &.zoom-exit-active {\n    transform: scale(0);\n    transition: transform ${props.timeout}ms ease;\n\n  }\n  `}\n\n`;\n\nexport default function Zoom(props) {\n  const { children, timeout, ...otherProps } = props;\n  return (\n    <CSSTransition\n      classNames=\"zoom\"\n      timeout={timeout}\n      unmountOnExit\n      {...otherProps}\n    >\n      <AnimatedContainer timeout={timeout}>{children}</AnimatedContainer>\n    </CSSTransition>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/loading.b27d0f93.gif\";","import loadingImg from \"./loading.gif\";\nimport styled from \"styled-components\";\n\nconst StatusIndicator = styled.img`\n  width: 40%;\n  height: 40%;\n  margin: 24px auto;\n`;\n\nexport function LoadingIndicator() {\n  return <StatusIndicator src={loadingImg} alt=\"loading\" />;\n}\nexport default function LoadingPresenter({ loading, error, children }) {\n  return (\n    <>\n      {children}\n      {loading && <LoadingIndicator />}\n      {error &&  !loading && <p>Something went wrong</p>}\n    </>\n  );\n}\n","import Card from \"../Card\";\nimport { GET_REPOSITORIES } from \"../../graphql/operations\";\nimport { useQuery } from \"@apollo/client\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport Zoom from \"../Zoom\";\nimport { makeProjectLink } from \"../../utills\";\nimport LoadingPresenter from \"../LoadingPresenter\";\nimport { useInView } from \"react-intersection-observer\";\n\nexport default function RepoList() {\n  const { loading, error, data, fetchMore } = useQuery(GET_REPOSITORIES, {\n    variables: { first: 5 },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const { inView, ref } = useInView();\n\n  const repos = data?.viewer.repositories.edges.map((edge) => edge.node);\n  const pageInfo = data?.viewer.repositories.pageInfo;\n\n  function requestFetchMore() {\n    if (pageInfo?.hasNextPage) {\n      fetchMore({\n        variables: { after: pageInfo.endCursor, first: 5 },\n      });\n    }\n  }\n\n  return (\n    <>\n      <LoadingPresenter loading={loading} error={error}>\n        <TransitionGroup appear={true}>\n          {repos &&\n            repos.map((repo, index) => {\n              const topics = repo.repositoryTopics.nodes.map(\n                ({ topic }) => topic.name\n              );\n              return (\n                <Zoom timeout={(index + 1) * 250} key={repo.name}>\n                  <Card\n                    title={repo.name}\n                    link={makeProjectLink(\n                      repo.name,\n                      repo.defaultBranchRef.name\n                    )}\n                    description={repo.description}\n                    date={new Date(repo.updatedAt)}\n                    topics={topics}\n                  />\n                </Zoom>\n              );\n            })}\n        </TransitionGroup>\n      </LoadingPresenter>\n      <div ref={ref}></div>\n      {!loading && inView && pageInfo?.hasNextPage && requestFetchMore()}\n    </>\n  );\n}\n","import Page from \"../components/Page\";\nimport RepoList from \"../components/RepoList\";\n\nexport default function Home() {\n  return (\n    <Page>\n      <RepoList></RepoList>\n    </Page>\n  );\n}\n","import Page from \"../components/Page\";\nimport marked from \"marked\";\nimport { useAsync } from \"react-use\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport { getREADMELink, replaceRelativeLinks } from \"../utills\";\nimport LoadingPresenter from \"../components/LoadingPresenter\";\nconst ContentContainer = styled.div`\n  & img {\n    max-width: 100%;\n  }\n`;\n\nexport default function ProjectDetails(props) {\n  const { repoName, defaultBranch } = useParams();\n\n  const { value, loading, error } = useAsync(async () => {\n    const response = await fetch(getREADMELink(repoName, defaultBranch));\n    let markdown = await response.text();\n    return replaceRelativeLinks(repoName,defaultBranch,markdown)\n  });\n\n  return (\n    // Content is already purified\n    <Page>\n      <LoadingPresenter loading={loading} error={error}>\n        {value && (\n          <ContentContainer\n            dangerouslySetInnerHTML={{ __html: marked(value) }}\n          ></ContentContainer>\n        )}\n      </LoadingPresenter>\n    </Page>\n  );\n}\n","import { useState } from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyle,{themes} from './globalStyle';\nimport About from \"./pages/About\";\nimport Home from './pages/Home';\nimport ProjectDetails from './pages/ProjectDetails';\n\nfunction App() {\n\n  const [themeKey,setThemeKey] = useState('dark');\n\n  return (\n    <Router>\n      <ThemeProvider theme={{themeKey,setThemeKey,...themes[themeKey]}}>\n      <GlobalStyle />\n      <Switch>\n        <Route path=\"/projects/:repoName/:defaultBranch\" component={ProjectDetails} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nimport { relayStylePagination } from \"@apollo/client/utilities\";\n\nconst cache = new InMemoryCache({\n  typePolicies: {\n    User: {\n         fields: {\n           repositories:relayStylePagination()\n         }\n      },\n    },\n});\n\nconst githubApolloClient = new ApolloClient({\n  uri: process.env.REACT_APP_GRAPHQL_ENDPOINT,\n  cache\n});\n\nexport default githubApolloClient;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ApolloProvider } from '@apollo/client'\nimport githubApolloClient from './graphql';\n\nReactDOM.render(\n  <ApolloProvider client={githubApolloClient}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}